#!/bin/bash
#
# myservice server
#
# chkconfig: - 35 99 10
# description: test script
#
# processname: myservice

# Source function library.
. /etc/rc.d/init.d/functions

prog=myserviceserver
myservice="/path/to/my/service/script/server.sh"
cmd=$myservice
user=""
dir=""
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"
pidfile="/var/run/myservice.pid"
name=`basename $0`

get_pid() {
	cat "$pidfile"
}

is_running() {
	[ -f "$pidfile" ] && ps -p `get_pid` > /dev/null 2>&1
}

start(){
	if is_running; then
		echo "$prog already running"
	else
		echo "Starting $prog"
		if [ -z "$user" ]; then
			sudo $cmd >> "$stdout_log" 2>> "$stderr_log" &
		else
			sudo -u "$user" $cmd >> "$stdout_log" 2>> "$stderr_log" &
		fi
		echo $! > "$pidfile"

		if ! is_running; then
			echo "Unable to start $prog, see $stdout_log and $stderr_log"
			exit 1
		fi
	fi				

}

stop(){
	if is_running; then
		echo -n "Stopping $prog..."
		kill `get_pid`
		for i in 1 2 3 4 5 6 7 9 9 20
		do
			if ! is_running; then
				break
			fi
			echo -n "."
			sleep 1
		done
		echo

		if is_running; then
			echo "Not stopped; may still be shutting down or shutdown may have failed"
			exit 1
		else
			echo "Stopped"
			if [ -f "$pidfile" ]; then
				rm "$pidfile"
			fi
		fi
	else
		echo "$prog not running"
	fi
}

reload(){
	stop
	start
}

status(){
	if is_running; then
		echo "$prog running. PID: `get_pid`"
	else
		echo "$prog stopped"
		exit 1
	fi
}

case "$1" in
        start)
                start 
                ;;
        stop)
                stop 
                ;;
        restart)
                stop
                start
                ;;
        reload)
                reload
		;;
        status)
                status
                ;;
        *)
                echo $"Usage: $0 {start|stop|restart|reload|status}" 
esac

exit 0
